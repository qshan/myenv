#!/usr/bin/bash

#####exmaple of Calling this file, just add this part at the end of ~/.bashrc
#if [ -f ~/data/myenv/_mybashrc ]; then
#    . ~/data/myenv/_mybashrc
#fi
#
#if [ -f ~/data/myenv/_mybashrc ]; then
#    . ~/data/myenv/_mybashrc
#else
#     echo "no this file"
#fi
#
#if [ ! -d ~/data/myenv ]; then
#    mkdir -p ~/data/myenv
#fi
#

#### if the variable is #not# set
##if [[ -z ${variable_tested} ]]; then
#if [[ -z ${variable01_tested} ]]; then
#  echo "variable01_tested is not existed"
#else
#  echo "variable01_tested is existed"
#fi
#
## if the variable is set
#if [[ -v variable_tested ]]; then
#  echo "variable_tested is existed"
#else
#  echo "variable_tested is not existed"
#fi

#read here https://tecadmin.net/tutorial/bash-scripting/bash-functions/
#--------------------------------------------------

echo "Calling ###[_mybashrc]### file setting"

#echo "======================================"
#echo "Check PATH info:"
##echo $path
#echo $PATH

##ToCheck##
## https://web.fe.up.pt/~jmcruz/etc/unix/sh-vs-csh.html
##------------------------------
##login shell startup fils call sequence
# /etc/profile
# ~/.bash_profile
# ~/.bash_login
# ~/.profile
##------------------------------
##logout clean fils call sequence
# ~/.bashrc
##------------------------------
##no-login shell startup fils call sequence
# ~/.bash_logout
##------------------------------
##bash Shell variables
# VarName=5
# VarName = 5
##------------------------------
##bash Environment variables (children inherit them)
# export EnvVarName=5
##------------------------------
##bash PATH & path variables
# export PATH=PathName01:PathName02
##------------------------------
##alias setting format
# alias ls="ls -l"
##------------------------------

#####
#if [ -f ~/.myalias_common ]; then
#  source ~/.myalias_common
#fi

#set the bash history size for personal setting
export HISTSIZE=10000

alias history='\history 1000'

export timefshan="`date +%Y-%m-%d-%H%M`"
#alias  gettime='echo `date +%Y-%m-%d-%H%M`'
alias  gettime='export timefshan="`date +%Y-%m-%d-%H%M`"; echo ${timefshan}'

# replace Caps with CTRL
#debug#fshan#setxkbmap -option ctrl:nocaps
#
###set as default setting
##setxkbmap -option
#
# replace the Caps as press left-Shift and right-Shift both
#setxkbmap -option shift:both_capslock
#
# make short-pressed ctrl behave like Escape
# 单独按下Caps表示Escape，Caps+其它键时表示Ctrl
#xcape -e "Control_L=Escape"

#if [ -f ~/.myalias_common ]; then
#  source ~/.myalias_common
#fi




#alias setting here
##------------------------------
alias ls='    \ls --color=auto '
alias la='    ls -alh '
alias lt='    ls -ctl '
alias lstr='  ls -tr '
#
alias mvf='             \mv -f '
##------------------------------
alias grep='            \grep --color=auto '
alias greprni='         \grep --color=auto -rni '
#alias grepspaceonend='  \grep --color=auto -rni "\s\+\$" '
#alias grepspaceonend='  \grep --color=auto -rni "\ $" '
alias grepspaceonend='  \grep --color=auto -rni " \+$" '
#alias grepspaceonendofline='\grep --color=auto -rni "\s\+\$$" '
#
#find path_name -type f -iname "*.[c|h]" | xargs grep '\s\+\$'
#find path_name -type f -iname "*.[c|h]" | xargs sed -i 's/\s\+\$//g'
#grep --color=auto -rni '\s\+\$' pathname
##------------------------------
alias findL='               \find -L '
alias findSwfFile='         find ./ -type f -iname "*.sw*" '
alias findSwfFileRemove='   find ./ -type f -iname "*.sw*" | xargs \rm -rfv '
alias findDotOFile='        find ./ -type f -iname "*.o" '
alias findDotOFileRemove='  find ./ -type f -iname "*.o" | xargs \rm -rfv '
alias findremovespaceonend='functionfindremovespaceonend(){ unset -f functionfindremovespaceonend; find "$@" -type f | xargs sed -i "s/\s\+\$//g" ; }; functionfindremovespaceonend '
#define a bash function
function findCheckFiles() { find "$@" -type f | xargs ls -alh ; }
#TODO#
#find ./ -type f | xargs sed -i 's/13/14/g'
#find TargetPathName -type f -iname "*.c" | xargs sed -i 's/HWIO_OUTXF\s*(\s*[a-zA-Z0-9_\-]*\s*,\s*/HWIO_OUTF (/g'
##------------------------------
alias sudodpkgforce-depends='   sudo dpkg -P --force-depends '
alias sudoaptfix-brokeninstall='sudo apt --fix-broken install'
##------------------------------
alias tree.U='        \tree -U '
alias tree.r='        \tree -r '
alias tree.sort.name='\tree --sort=name '
##------------------------------
alias whicha='which -a '
##------------------------------
alias lnsTf='ln -sTf '
alias lnsnf='ln -snf '
##------------------------------
alias chmod+R='chmod -R a+r '
alias chmod-R='chmod -R a-r '
alias chmodER='chmod -R a=r '
##------------------------------
alias tarczvf='tar -czvf '
alias tarxzvf='tar -xzvf '
alias tarcJvf='tar -cJvf '
alias tarxJvf='tar -xJvf '
alias tartf='  tar -tf '
##------------------------------
#alias RenameReplaceSpace="\rename         's/\s+/_/g' "
alias RenameReplaceSpace="  \rename         s/\'+/_/g "
alias RenameReplaceSpace1=" \rename        's/[\-|_|\s]*\-+[\-|_|\s]*/-/g' "
#alias RenameReplaceSpace2="\rename        's/\s*[(|)|\[|\]|{|}|&|,|\!|-]*\s+/_/g' "
#alias RenameReplaceSpace2="\rename        's/[(|)|\[|\]|{|}|&|,|\!|-|\s]+/_/g' "
#alias RenameReplaceSpace2="\rename        's/[(|)|\[|\]|{|}|&|,|’|\!|-|\+|\s]+/_/g' "
#alias RenameReplaceSpace2="\rename        's/[(|)|\[|\]|{|}|&|,|’|\!|\-|_|\s|:]+/_/g' "
alias RenameReplaceSpace2=" \rename        's/[(|)|\[|\]|{|}|&|,|\!|_|\s|:]+/_/g' "
alias RenameReplaceSpace21="\rename        's/[(|)|\[|\]|{|}|&|,|\!|:]+/./g' "
alias RenameReplaceSpace22="\rename        's/[_|\s]+/_/g' "
#\rename        's/[(|)|\[|\]|{|}|&|,|'"'"'|\!|-|_|\s|:]+/_/g'
#alias RenameReplaceSpace3="\rename        's/[《|》|（|）|：|、|(|)|“|”|·|，|’|、|\[|\]|\s|’]+/_/g' "
alias RenameReplaceSpace3=" \rename        's/[\-|_]*\.+[\-|_]*/./g' "
#[《|》|（|）|：|、|(|)|“|”|·|，|、|\[|\]|\s|’]
#alias RenameReplaceSpaceAll="RenameReplaceSpace2 *.* ;RenameReplaceSpace1 *.* ;RenameReplaceSpace3 *.* ;"
alias RenameReplaceSpaceAll="RenameReplaceSpace21 *.* ; RenameReplaceSpace22 *.* ; RenameReplaceSpace1 *.* ; RenameReplaceSpace3 *.* ;"
alias RenameRemoveSChar="   \rename         's/\s*[(|)|\[|\]|{|}|&|,|\!|-]+\s*/-/g' "
alias RenameRemoveSChar2="  \rename         's/[(|)|\[|\]|{|}|&|,|\!]+//g' "
alias RenameCleanDotInFileName="\rename     's/[-|_]*\.+[-|_]*/./g' "
#alias RenameFiles='functionRenameFiles(){ unset -f functionRenameFiles; RenameRemoveSChar "$@" ; RenameReplaceSpace "$@" ;}; functionRenameFiles '
#alias RenameFilesInCurrentFolder="RenameRemoveSChar *.* ; RenameReplaceSpace *.* "
alias RenameFilesInCurrentFolder="RenameRemoveSChar *.* ; RenameReplaceSpace *.* ; RenameCleanDotInFileName *.* ;"
alias RenameFilesInFolder='functionRenameFilesInFolder(){ unset -f functionRenameFilesInFolder; RenameRemoveSChar "$@"/*.* ; RenameReplaceSpace "$@"/*.* ;  RenameCleanDotInFileName "$@"/*.* ;}; functionRenameFilesInFolder '
##------------------------------
#alias GetCurrentFolderName="`pwd | grep 'dev_' | sed -r 's/.*dev_\w+\/\w+\/([0-9a-zA-Z_-]*)\/.*/\1/g'`"
#alias GetCurrentFolderName='`pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\2/g"`'
#alias GetCurrentFolderName='pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\2/g"'
alias GetNameofCurrentFolder='echo $PWD | sed -r "s/(.*)\/(.*)/\2/g"'
#alias GetCurrentPathOfFolderName='`pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\1/g"`'
#alias GetCurrentPathOfFolderName='pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\1/g"'
alias GetFullPathOfCurrentFolder='echo $PWD | sed -r "s/(.*)\/(.*)/\1/g"'
##------------------------------
alias sed_i_r='             sed -i -r '
alias sedremovespaceonend=' sed -i "s/\s\+\$//g" '
alias sedremovespaceonend1='sed -i "s/\ \+$//g" '
#example#sed -i -r 's/Word_searched/word_target/g' File_name_replaced
#sed -i -r "s/AC_INIT(.*)/AC_INIT(${FileNameOfTopCode})/g" configure.in
##------------------------------
alias mount.loop='          mount -o loop '
##------------------------------

alias h='\history 1000'
alias v='         vim '
alias vimd='      vim -d '
alias vimdh='     vim -c "set diffopt+=horizontal" -d '
alias vimdo='     vim -d -o '
#alias nvimdh='    vim -c "set-default diffopt+=horizontal" -d '
alias vimR='      vim -R '
alias vimo='      vim -o '
alias vimO='      vim -O '
alias gvimd='     gvim -d '
alias gvimdo='    gvim -d -o '
alias gvimR='     gvim -R '
alias nvimclean=' nvim --clean '
alias nvimd='     nvim -d '
alias nvimdh='    nvim -c "set diffopt+=horizontal" -d '
alias nvimdo='    nvim -d -o '
alias nvimR='     nvim -R '
#alias nvimdh='    nvim -c "set-default diffopt+=horizontal" -d '
alias nvimo='     nvim -o '
alias nvimO='     nvim -O '
#alias nvimqt='    nvim-qt -- '
alias nvimqt='    nvim-qt --geometry 970x512 -- '

alias cscopebcqRv=' cscope -bcqRv '

##ToCheck# for your env default setting
alias Emacs='/usr/bin/emacs26'
#alias EmacsM='Emacs -mm'
#alias EmacsM='Emacs --maximized'
#function of open emace gui with background process in shell
#wored#EmacsMm () {
#wored#  Emacs -mm "$@" &
#wored#}
##worked##alias EmacsM='functionEmacsM(){ Emacs -mm "$@" & }; functionEmacsM '
#alias EmacsM='functionEmacsM(){ unset -f functionEmacsM; Emacs -mm "$@" & }; functionEmacsM '
alias EmacsM='functionEmacsM(){ unset -f functionEmacsM; Emacs -mm --no-desktop "$@" & }; functionEmacsM '

function EmacsM1() { Emacs -mm --no-desktop "$@" & }








#for lubuntu
alias openFileBroswer='pcmanfm &'
#for ubuntu
#alias openFileBroswer='nautilus &'

alias openPdf='evince '

#rust setting
alias cargonew='    cargo new '
alias cargobuild='  cargo build '
alias cargorun='    cargo run '

#go_path alias
alias gotestspace=' cd /data/work/test_space'
alias goriot='      cd /data/work/test_space/RIOT'
alias gortthread='  cd /data/work/test_space/rt-thread'
alias gortqemu='    cd /data/work/test_space/rt-thread/bsp/qemu-vexpress-a9'
#
alias goquarkts='   cd /data/work/test_space/QuarkTS'
alias gonuttx='     cd /data/work/test_space/nuttx'
alias goCTest='     cd /data/work/test_space/ctest_qshan'
alias goCppTest='   cd /data/work/test_space/cpptest_qshan'

#git alias
alias githelpa='              git help -a '
alias gitgui='                git gui '
alias gitadd_f='              git add -f '
alias gitmvn='                git mv -n '
#alias gitmvn='                git mv -dry-run '
alias gitmv='                 git mv '
alias gitmvv='                git mv -v '
alias gitmvf='                git mv -f '
alias gitrmn='                git rm -n '
#alias gitrmn='                git rm -dry-run '
alias gitrm='                 git rm '
alias gitrmr='                git rm -r '
alias gitrmf='                git rm -f '
#
alias gitcommitma='           git commit -a -m '
#example# git commit -ma "coment description"
alias gitcommitm='            git commit -m '
#example# git commit -m "coment description" FileName1 FileName2
alias gitcommitamend='        git commit --amend '
alias gitpush='               git push '
#example# git push TargetName SourceName #push data from SourceName to TargetName
alias gitpushset-upstream='    git push --set-upstream '
##### set the default behavior of git push operation, from local master to remote origin
##### git push --set-upstream origin master
alias gitpushoriginmaster='    git push origin master'
# $git push origin master                       #normal push, find a ref that matches master in the source repo(most likely, it would find refs/heads/master), and update the same ref in the origin repo with it. If master did not exist remotely, it would be created.
#example# git push --set-stream TargetName SourceName #push data from SourceName to TargetName
alias gitpull='               git pull --tags '
alias gitpulloriginmaster='   git pull --tags origin master '
#example git checkout TagName FileName
#example git checkout TagName
#example git checkout -b NewBranchName
#example git checkout -b NewBranchName TagName
alias gitfetch='              git fetch --all '
alias gitremoteaddorigin='    git remote add origin '
alias gitremoteadd='          git remote add '
#git remote add LocalNameForRemoteRepo file://${FullPathOfRemoteRepo}/${ProjectName}.git
alias gitremotev='            git remote -v'
alias gitremotevshow='        git remote -v show '
#example# gitremoteshow RemoteRepoName
alias gitremoteshoworigin='   git remote show origin'
alias gitremotev='            git remote -v'
alias gitremotePruneOrigin='  git remote prune origin'
alias gitclone='              git clone --recursive '
#
alias gitgrep='               git grep '
alias gitgrepr='              git grep -r '
alias gitgrepi='              git grep -i '
alias gitgrepI='              git grep -I '
alias gitgrephelp='           git grep --help'
alias gitdiffstat='           git diff --stat '
alias gitdifftool='           git difftool --tool=vimdiff '
alias gitdifftoolhead='       git difftool --tool=vimdiff HEAD '
alias gitdifftoolhead1='      git difftool --tool=vimdiff HEAD^ '
alias gitdifftoolhead2='      git difftool --tool=vimdiff HEAD^^ '
alias gitshow='               git show '
alias gitlsfiles='            git ls-files '
alias gitlsremote='           git ls-remote '
alias gitlstree='             git ls-tree '
alias gitlog='                git log '
alias gitlogpretty='          git log --pretty="%h - %s" --no-merges -- t/ '
alias gitlogprettyshort='     git log --pretty=short '
alias gitlogprettyoneline='   git log --pretty=oneline '
alias gitloggraph='           git log --graph '
alias gitlogstat='            git log --stat '
alias gittagl='               git tag -l '
alias gittaga='               git tag -a '
#alias gitstatus='             git status '
alias gitstatusshort='        git status --short '
alias gitbranchall='          git branch --all'
alias gitbranchlist='         git branch --list'
alias gitbranchremotes='      git branch --remotes'
alias gitbranchtrack='        git branch --track'
#example# gitbranchtrack localBranchName remoteHostName/remoteBranchName
alias gitbranchb='            git branch -b'
#example# gitbranchb localBranchName remoteHostName/remoteBranchName
#example# gitbranchb localBranchName
alias gitswitch='             git switch '
alias gitswitchc='            git switch -c'
alias gitswitchf='            git switch -f'
alias gitswitchm='            git switch -m'
#example# gitswitchc localBranchName remoteHostName/remoteBranchName
alias gitrestore='            git restore'
alias gitconfiglist='         git config --list'
alias gitreset_soft='         git reset --soft '
alias gitreset_hard='         git reset --hard '
#example# gitreset_hard FileName
#example# gitreset_hard FolderName
alias gitreset_head0='        git reset HEAD '
alias gitreset_head1='        git reset HEAD^ '
alias gitreset_head2='        git reset HEAD~2 '
alias gitreset_head3='        git reset HEAD~3 '
alias gitdiffhead='           git diff HEAD '
alias gitdiff_cached='        git diff --cached '
alias gitsubmoduleupdate='    git submodule update --init --recursive '
alias gitsubmoduleupdatef='   git submodule update --init --recursive --remote --force '
alias gitsubmoduledeinit='    git submodule deinit '
alias gitsubmoduleadd='       git submodule add '
#example# git submodule add <submodule-url> <submodule-path>
#example#reinit submodule
##1#Delete the submodule folder:
#git submodule deinit <submodule_path>
#git rm <submodule_path>
#rm -rf .git/modules/<submodule_path>
##2#Add the submodule again:
#git submodule add <repository_url> <submodule_path>
##3#Update the submodule:
#git submodule update --init --recursive
#
alias gitsubmodulestatus='    git submodule status '
alias gitsubmoduleset-url='   git submodule set-url -- '
# git submodule set-url -- <path> <url>
alias gitpullsubmodules='     git pull --recurse-submodules '
alias gitcheckoutb='          git checkout -b '
alias gitcheckoutf='          git checkout -f '
#example# git checkout -f <branch> [<start point>]
alias gitcheckoutm='          git checkout -m '
alias gitcheckout--='         git checkout -- '
#example# gitcheckout commitNumber fileName
#example# gitcheckout fileName
alias gitcleanfd='            git clean -fd '
alias gitstash='              git stash '
alias gitstashlist='          git stash list '
alias gitstashshow='          git stash show '
alias gitstashpop='           git stash pop '
alias gitstashapply='         git stash apply '
alias gitstashdrop='          git stash drop '
alias gitstashclear='         git stash clear '
alias gitstashbranch='        git stash branch '
alias gitstashclear='         git stash clear '
alias gitstashcreate='        git stash create '
alias gitstashstore='         git stash store '
##### Interrupted workflow
###  When you are in the middle of something, your boss comes in and demands that you fix something immediately.
###  Traditionally, you would make a commit to a temporary branch to store your changes away, and return to your
###  original branch to make the emergency fix, like this:
###      # ... hack hack hack ...
###TODO# $ git switch -c my_wip
###      $ git commit -a -m "WIP"
###      $ git switch master
###      # edit emergency fix
###      $ git commit -a -m "Fix in a hurry"
###      $ git switch my_wip
###      $ git reset --soft HEAD^
###      # ... continue hacking ...
###  You can use git stash to simplify the above, like this:
###      # ... hack hack hack ...
###info  $ git stash
###      # edit emergency fix
###      $ git commit -a -m "Fix in a hurry"
###info  $ git stash pop
###      # ... continue hacking ...
#
alias gitinit='               git init '
alias gitinitbare='           git init --bare '
alias gitclonebarel='         git clone --bare -l '
#example git clone --bare -l LocalRepoPathWithFullName/.git BackupRepoNameWithFullPath.git

#input methods reset
alias input_methods_reset_fcitx='fcitx -r'
















###############alias for tags generation
## todo Universal-ctags is required
#alias ctags='the_ctags_in_your_env'
alias ctags_list-languages="        ctags --list-languages "
alias ctags_list-maps="             ctags --list-maps "
alias ctags_list-map-exetensions="  ctags --list-map-extensions "
alias ctags_list-fields="           ctags --list-fields "
alias ctags_list-kinds="            ctags --list-kinds "
alias ctags_list-kinds-full="       ctags --list-kinds-full "
alias ctags_list-extras="           ctags --list-extras "
alias ctags_list-excludes="         ctags --list-excludes "
alias ctags_list-features="         ctags --list-features "
alias ctags_list-params="           ctags --list-params "
alias ctags_langmap='               echo "ctags --langmap=c:.c.x,java:+.j"'
alias ctags_langdef='               echo "ctags --langdef=C "'
alias ctags_R="                     ctags -R --extra=+qfrs "
#alias ctags_R_C="                   ctags -R    --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extra=+qf "
alias ctags_R_C="                   ctags -R    --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extra=+qfrs "
#alias ctags_R_Python="              ctags -R    --languages=python --python-kinds=+vi --fields=+iaSKz --extra=+qfrs "
alias ctags_R_Python="              ctags -R    --languages=python --python-kinds=+vi --fields=+iaSKz --extra=+qfrs "
#alias ctags_R_SV="                  ctags -R    --languages=systemverilog --systemverilog-kinds=+ctfeilmpdva --fields=+iaSKz --extra=+qf "
#alias ctags_R_SV="                  ctags -R    --languages=systemverilog,verilog --systemverilog-kinds=+ctfeilmp --fields=+iaSKz --extras=+qf "
alias ctags_R_SV="                  ctags -R    --languages=systemverilog,verilog --systemverilog-kinds=+ctfeilmp --fields=+iaSKz --extras=+qfrs "
alias ctags_R_scala="               ctags -R    --languages=scala --scala-kinds=+p --fields=+iaS --extras=+qfrs "
#alias ctags_Re="                    ctags -R -e --c++-kinds=+px --fields=+iaS --extra=+qf "
alias ctags_Re="                    ctags -R -e --extra=+qfrs "
#alias ctags_Re_C="                  ctags -R -e --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extra=+qf "
alias ctags_Re_C="                  ctags -R -e --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extra=+qfrs "
#alias ctags_Re_Python="             ctags -R -e --languages=python --python-kinds=+vi --fields=+iaSKz --extra=+qf "
alias ctags_Re_Python="             ctags -R -e --languages=python --python-kinds=+vi --fields=+iaSKz --extra=+qfrs"
#alias ctags_Re_SV="                 ctags -R -e --languages=systemverilog --systemverilog-kinds=+ctfeilmpdva --fields=+iaSKz --extra=+qf "
#alias ctags_Re_SV="                 ctags -R -e --languages=systemverilog,verilog --systemverilog-kinds=+ctfeilmp --fields=+iaSKz --extras=+qf "
alias ctags_Re_SV="                 ctags -R -e --languages=systemverilog,verilog --systemverilog-kinds=+ctfeilmp --fields=+iaSKz --extras=+qfrs"
#alias ctags_Re_scala="              ctags -R -e --scala-kinds=+p --fields=+iaS --extra=+qf "
alias ctags_Re_scala="              ctags -R -e --languages=scala --scala-kinds=+p --fields=+iaS --extras=+qf "
#alias ctags_L="                     ctags -R    --c++-kinds=+px --fields=+iaS --extra=+qf -L "
alias ctags_L="                     ctags       --extra=+qfrs -L"
alias ctags_L_C="                   ctags       --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extra=+qfrs -L"
alias ctags_L_Python="              ctags       --languages=python --python-kinds=+vi --fields=+iaSKz --extra=+qfrs -L"
#alias ctags_L_SV="                  ctags -R    --languages=systemverilog --systemverilog-kinds=+ctfeilmpdva --fields=+iaSKz --extra=+qf -L "
alias ctags_L_SV="                  ctags       --languages=systemverilog,verilog --systemverilog-kinds=+ctfeilmp --fields=+iaSKz --extras=+qfrs -L"
alias ctags_L_scala="               ctags       --languages=scala --scala-kinds=+p --fields=+iaS --extras=+qfrs -L"
#you could try with filelist input style, like
#ctags_R -L filelist_name

export PATH=$PATH:/usr/local/lib:/usr/lib

#set the the path of graalvm instead of openjdk
export PATH=~/data/tools/graalvm/graalvm-ce-java11-22.1.0/bin:$PATH

#sudo apt install openjdk-8-jdk
#if ['' eq `which java`]; then sudo apt install openjdk-8-jdk; fi;
export BrissInstallPath='~/data/tools/briss/briss-0.9'
alias OpenBriss="java -jar ${BrissInstallPath}/briss-0.9.jar &"
#
#set title with current path
#export PROMPT_COMMAND=' echo -ne "\033]0; $PWD \007" ; echo -ne "\033]1; ${PWD}_Min \007" '
#export PROMPT_COMMAND=' echo -ne "\033]0;  $PWD \a" ; echo -ne "\033]1; $PWD min \a" '
export PROMPT_COMMAND=' echo -ne "\033]0; `basename $PWD` \a" ; echo -ne "\033]1; `basename $PWD` \a" '
#where \033 is the character code for ESC, and \007 for BEL
#alias set_tab_title='funcSetTabTitle(){ unset -f funcSetTabTitle; export PROMPT_COMMAND=' echo -ne "\033]0; `basename $$PWD` \a" ; echo -ne "\033]1; `basename $$PWD` \a" ' }; funcSetTabTitle '

#PROMPT_COMMAND='        echo -ne "\033]0; $PWD \a"'
alias set_terminal_title='        echo -ne "\033]0; $PWD \a"'
#alias set_terminal_title='        echo -ne "\033]0; `basename $PWD` \a"'
#PROMPT_COMMAND='        echo -ne "\033]0; $PWD \a"'
alias set_terminal_title_min='    echo -ne "\033]1; $PWD \a"'
#alias set_terminal_title_min='    echo -ne "\033]1; `basename $PWD` \a"'

#get the current shell type
alias get_current_shell="         sh -c 'ps -p \$\$ -o ppid=' | xargs ps -o comm= -p"

#Bash Color Codes
## Text Format          Foreground (text) color   Background color
## 0: normal text       30: Black                 40: Black
## 1: bold              31: Red                   41: Red
## 4: Underlined text   32: Green                 42: Green
##                      33: Yellow                43: Yellow
##                      34: Blue                  44: Blue
##                      35: Purple                45: Purple
##                      36: Cyan                  46: Cyan
##                      37: White                 47: White
##  \e[  – Indicates the beginning of color prompt
##  x;ym – Indicates color code. Use the color code values mentioned below.
##  \e[m – indicates the end of color promptSTARTFGCOLOR='\e[0;47;34m';
##  STARTBGCOLOR="\e[47m"
##  ENDCOLOR="\e[0m"
##  export PS1="$STARTFGCOLOR$STARTBGCOLOR\u@\h \w> $ENDCOLOR"
##  export PS1="${STARTFGCOLOR}${STARTBGCOLOR}\u@\h \w> ${ENDCOLOR}"
#
export BashBlackBG="40;"
#TODO#set color of background #export BashBlack="\[\e[0;40;30m\]"


#
export BashBlack="\[\e[0;30m\]"
export BashDarkGray="\[\e[1;30m\]"
export BashBlue="\[\e[0;34m\]"
export BashLightBlue="\[\e[1;34m\]"
export BashGreen="\[\e[0;32m\]"
export BashLightGreen="\[\e[1;32m\]"
export BashCyan="\[\e[0;36m\]"
export BashLightCyan="\[\e[1;36m\]"
export BashRed="\[\e[0;31m\]"
export BashLightRed="\[\e[1;31m\]"
export BashPurple="\[\e[0;35m\]"
export BashLightPurple="\[\e[1;35m\]"
export BashBrown="\[\e[0;33m\]"
export BashYellow="\[\e[1;33m\]"
export BashLightGray="\[\e[0;37m\]"
export BashWhite="\[\e[1;37m\]"
#export BashColorEnd="\[\e[0m\]"
export BashColorEnd="\[\e[0;m\]"
#worked#export BashColorEnd="\[\033[0m\]"

#set format of shell header string for bash
#alias set_full_path="export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '"
#worked#alias set_full_path="export PS1='\[\033[01;32m\]\u\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$\[\e[m\]'"
#NeedRemove+\e[-m#alias set_full_path="export PS1='\[\033[${BashLightGreen}m\]\u\[\033[00m\]:\[\033[${BashLightBlue}m\]\w\[\033[00m\]$\[\e[m\]'"
#alias set_full_path="export PS1='\[${BashLightGreen}\]\u\[${BashColorEnd}\]:\[${BashLightBlue}\]\w\[${BashColorEnd}\]$\[${BashColorEnd}\]'"
#alias set_full_path="export PS1='\[${BashLightGreen}\]\u\[${BashColorEnd}\]:\[${BashLightBlue}\]\w\[${BashColorEnd}\]$'"
#alias set_full_path="export PS1='\[${BashLightGreen}\]\u\[${BashColorEnd}\]:\[${BashLightBlue}\]\w[\#]\[${BashColorEnd}\]$'"
#alias set_full_path="export PS1='\[${BashLightGreen}\]\u\[${BashColorEnd}\]:\[${BashLightBlue}\]\w\[${BashColorEnd}\][\#]$'"
####update the color variable formate
#alias set_full_path="export PS1='${BashLightGreen}\u${BashColorEnd}:${BashLightBlue}\w${BashColorEnd}[\#]$'"
alias  set_full_path="export PS1='${BashLightGreen}\u${BashColorEnd}:${BashLightBlue}\w${BashColorEnd}${BashLightGreen}[\#]${BashColorEnd}$'"
#alias set_full_path1="export PS1='\[${BashYellow}\]\u:\w\[${BashColorEnd}\]$'"
#alias set_full_path1="export PS1='\[${BashYellow}\]\u:\w[\#]\[${BashColorEnd}\]$'"
####update the color variable formate
#alias set_full_path1="export PS1='${BashYellow}\u:\w${BashColorEnd}${BashLightGreen}[\#]${BashColorEnd}$'"
alias set_full_path1="export PS1='${BashYellow}\u:\w${BashColorEnd}${BashLightGreen}[\#]\n${BashColorEnd}$'"
#
#alias set_short_path="export PS1='[\u@\h_\w\$ '"
#alias set_short_path="export PS1='\[\033[01;32m\]\u@\h$ '"
#alias set_short_path="export PS1='\[\033[01;32m\]\u\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]$\[\e[m\]'"
#worked#alias set_short_path="export PS1='\[\033[01;33m\]\u\[\033[00m\]:\[\033[01;34m\]\W\[\033[01;32m\]$\[\e[m\]'"
#worked#alias set_short_path="export PS1='\[\033[${BashYellow}m\]\u\[\033[00m\]:\[\033[${BashLightBlue}m\]\W\[\033[${BashLightGreen}m\]$\[\e[m\]'"
#alias set_short_path="export PS1='\[${BashYellow}\]\u\[${BashColorEnd}\]:\[${BashLightBlue}\]\W\[${BashLightGreen}\]$\[${BashColorEnd}\]'"
#alias set_short_path1='export PS1="${BashYellow}\u${BashColorEnd}:${BashLightBlue}\W${BashLightGreen}$\[${BashColorEnd}\]"'
####update the color variable formate
alias  set_short_path="export PS1='${BashYellow}\u${BashColorEnd}:${BashLightBlue}\W${BashLightGreen}[\#]${BashColorEnd}$'"
alias set_short_path1='export PS1="${BashYellow}\u${BashColorEnd}:${BashLightBlue}\W${BashLightGreen}[\#]${BashColorEnd}$"'
#try##alias set_short_path='export PS1="\[---\e[---${BashYellow}m \]---\u---\[---\e[---0m---\]:\[---\e[---${BashLightBlue}m---\]---\W\[---\e[---${BashLightGreen}m---\]---$---\[---\e[m---\]"'
#new#alias set_short_path='export PS1="${BashYellow}---\u---${BashColorEnd}---:---${BashLightBlue}---\W---${BashLightGreen}$---\[---${BashColorEnd}---\]"'
#
#alias             set_default_lubuntu_path="export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$'"
#alias set_default_lubuntu_path_with_yellow="export PS1='\[${BashYellow}\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w${BashColorEnd}\$'"
#alias set_default_lubuntu_path_with_yellow="export PS1='\[${BashYellow}\u@\h: \w\a\]${BashColorEnd}\$'"
#alias set_default_lubuntu_path_with_yellow="export PS1='\[${BashYellow}\u@\H: \w\a\][\#]${BashColorEnd}\$'"
#alias set_default_lubuntu_path_with_yellow="export PS1='\[${BashYellow}\u@\H: \w\a\]${BashColorEnd}\$'"
#alias set_default_lubuntu_path_with_yellow="export PS1='\[${BashYellow}\]\u@\H:\w\[${BashColorEnd}\][\#]$'"
####update the color variable formate
#alias              set_default_lubuntu_path="export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$'"
alias              set_default_lubuntu_path="export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$'"
#alias set_default_lubuntu_path_with_yellow="export PS1='${BashYellow}\u@\H:\w${BashColorEnd}[\#]$'"
alias  set_default_lubuntu_path_with_yellow="export PS1='${BashYellow}\u@\H:\w${BashColorEnd}${BashLightGreen}[\#]${BashColorEnd}$'"
alias set_default_lubuntu_path_with_yellow1="export PS1='${BashYellow}\u@\H:\W${BashColorEnd}${BashLightGreen}[\#]${BashColorEnd}$'"
#####set default with color by default
#set_default_lubuntu_path_with_yellow
#export PS1=``\s-\v\$ ''
#echo "PS1 is $PS1"
set_full_path

alias wgetc='   wget -c '
alias wgetL='   wget -L '
alias curlCL='  curl -CL '
alias curlL='   curl -L '
#alias curlCLO=' curl -CL -O '

#scala env setting
export PATH="/home/fshan/.local/share/coursier/bin:$PATH"
# https://www.scala-sbt.org/1.x/docs/Running.html
# https://www.scala-sbt.org/1.x/docs/Command-Line-Reference.html
# https://www.scalawilliam.com/essential-sbt/
alias sbtnew='                      sbt new '
alias sbttask='                     sbt task '
alias sbtabout='                    sbt about '
alias sbtclean='                    sbt clean '
alias sbtclearCaches='              sbt clearCaches '
alias sbtcompile='                  sbt compile '
alias sbtrecompile='                sbt ~compile '
alias sbttest='                     sbt test '
alias sbttestQuick='                sbt ~testQuick '
alias sbtconsole='                  sbt console '
alias sbtrun='                      sbt run '
alias sbtpackage='                  sbt package '
alias sbtreload='                   sbt reload '
alias sbtproject='                  sbt project '
alias sbtprojects='                 sbt projects'
alias sbtpublishLocal='             sbt publishLocal'
alias sbtinspect='                  sbt inspect '
alias sbtinspectactual='            sbt "inspect actual console"'
alias sbtsettings='                 sbt settings '
alias sbtsettingsv='                sbt "settings -v"'
alias sbttasks='                    sbt tasks '
alias sbttasksv='                   sbt "tasks -v"'
alias sbtprojects='                 sbt projects '
alias sbtshowversion='              sbt "show version"'
alias sbtscalaVersion='             sbt scalaVersion'
alias sbtcrossScalaVersions='       sbt crossScalaVersions'
alias sbtclassDirectory='           sbt classDirectory'
alias sbtbaseDirectory='            sbt baseDirectory'
alias sbtlibraryDepend='            sbt libraryDependencies'
alias sbtmanagedResourceDir='       sbt managedResourceDirectories'
alias sbtassembly='                 sbt assembly'
alias sbtpublishLocal='             sbt publishLocal'

#------------------------------
#mill Built-in commands
alias millwatch='                   mill --watch '
alias mill__compile='               mill __.compile '
alias mill__run='                   mill __.run '
alias millinit='                    mill init '
alias millresolve='                 mill resolve '
#info# mill resolve foo._
alias millresolvecompile='          mill resolve _.compile'
alias millresolvecompileall='       mill resolve __.compile'
alias millresolverun='              mill resolve _.run'
alias millresolverunall='           mill resolve __.run'
alias millresolvetest='             mill resolve _.test'
alias millresolvetestall='          mill resolve __.test'
#info#List what tasks are available to run:
alias millresolve_='                mill resolve _'
#info#see a full list of the different tasks that are available
alias millresolve__='               mill resolve __'
alias millinspect='                 mill inspect '
#info# mill inspect foo.run
#info# mill inspect foo._
alias millinspectcompile='          mill inspect _.compile'
alias millinspectcompileall='       mill inspect __.compile'
alias millinspect_='                mill inspect _'
alias millinspect__='               mill inspect __'
alias millshow='                    mill show '
#info# mill show foo.scalaVersion
alias millshowNamed='               mill showNamed '
alias millshow_='                   mill show _'
alias millshow__='                  mill show __'
alias millpath='                    mill path '
#info# mill path foo.assembly foo.sources
alias millpath_='                   mill path _'
alias millplan='                    mill plan '
#info# mill plan foo.compileClasspath
alias millshowvisualize='           mill show visualize '
alias millshowvisualizePlan='       mill show visualizePlan '
alias millclean='                   mill clean '
alias millcleancompile='            mill clean _compile'
alias millcleancompileall='         mill clean __compile'
#Search for dependency updates
alias millsearchdepend='            mill mill.scalalib.Dependency/showUpdates'
#The Build REPL
alias millbuildrepl='               mill --repl '
#Deploying your code
#
#Integrating IntelliJ with Mill
alias mill.scalalib.GenIdea='       mill mill.scalalib.GenIdea/idea'
alias mill.idea.GenIdea='           mill  -j 2 mill.idea.GenIdea/idea'
alias mill.idea.GenIdea.debug='     mill  -j 2 mill.idea.GenIdea/idea --debug'
alias mill.bsp.Install='            mill  -j 2 mill.bsp.BSP/install'
alias mill.bsp.Install.debug='      mill  -j 2 mill.bsp.BSP/install --debug'

#------------------------------
#chinese display support
#add following part into /etc/profile
export LC_ALL=C.UTF-8
export LANG=C.UTF-8
#------------------------------

#python alias
alias python3mvenv='                  python3 -m venv '
#Example#python3 -m venv VirtualEnvName ; cd VirtualEnvName; source bin/activate; pip3 list
#deactivate
alias python3mpipinstall='            python3 -m pip install'
alias python3mpipinstallupgradepip='  python3 -m pip install --upgrade pip'
alias python3mpiplist='               python3 -m pip list'

export PATH=$PATH:/opt/riscv/bin
export PATH=$PATH:~/miniconda3/bin
#------------------------------
# conda alias
alias condaactivate='   conda activate '
alias condadeactivate=' conda deactivate '
alias condacreate='     conda create '
alias condacreatename=' conda create -n '
#info#alias condacreaten='conda create -name '
alias condaremove=' conda remove '
alias condaremovename=' conda remove -n '
#example#conda remove -n EnvName RemovingModuleName
alias condainstall='    conda install '
alias condainstallname='conda install --name '
#info#alias condaconfigadd="conda config --add channels conda-forge"
#info#alias condaconfigconfig="conda config --set channel_priority strict"
#info#alias condaconfiginstall="conda install <package-name>"
alias condaversion='    conda --version '
alias condaupdateconda='conda update conda '
alias condaupdateall='  conda update --all '
alias condainfoe='      conda info -e '
alias condalist='       conda list '
alias condalistname='   conda list --name '
alias condasearch='     conda search '
alias condaupdate='     conda update '
alias condaconfigaddchannels='  conda config --add channels '
alias condaenvlist='    conda env list'

#------------------------------

#alias set_default_lubuntu_path="export PS1='\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$'

#\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$

# \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$

##alias set_full_path="export PS1='\[\e]0;\u@\h:_\w\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$'"
#alias set_shor_path="export PS1='[\u@\h_\W]\$'"
###$#following info got from man bash
###$       PS1    The value of this parameter is expanded (see PROMPTING below) and used as the primary  prompt  string.   The  default  value  is``\s-\v\$ ''.
###$       PS2    The value of this parameter is expanded as with PS1 and used as the secondary prompt string.  The default is ``> ''.
###$       PS3    The value of this parameter is used as the prompt for the select command (see SHELL GRAMMAR above).
###$       PS4    The  value of this parameter is expanded as with PS1 and the value is printed before each command bash displays during an execution trace.  The first character of PS4 is replicated multiple times, as necessary, to indicate multiple levels of  indirection. The default is ``+ ''.
###$
###$      PROMPTING
###$       When executing interactively, bash displays the primary prompt PS1 when it is ready to read a command, and  the  secondary  prompt  PS2
###$       when  it needs more input to complete a command.  Bash allows these prompt strings to be customized by inserting a number of backslash- escaped special characters that are decoded as follows:
###$              \a     an ASCII bell character (07)
###$              \d     the date in "Weekday Month Date" format (e.g., "Tue May 26")
###$              \D{format}
###$                     the format is passed to strftime(3) and the result is inserted into the prompt string;  an  empty  format  results  in  a locale-specific time representation.  The braces are required
###$              \e     an ASCII escape character (033)
###$              \h     the hostname up to the first `.'
###$              \H     the hostname
###$              \j     the number of jobs currently managed by the shell
###$              \l     the basename of the shell's terminal device name
###$              \n     newline
###$              \r     carriage return
###$              \s     the name of the shell, the basename of $0 (the portion following the final slash)
###$              \t     the current time in 24-hour HH:MM:SS format
###$              \T     the current time in 12-hour HH:MM:SS format
###$              \@     the current time in 12-hour am/pm format
###$              \A     the current time in 24-hour HH:MM format
###$              \u     the username of the current user
###$              \v     the version of bash (e.g., 2.00)
###$              \V     the release of bash, version + patch level (e.g., 2.00.0)
###$              \w     the current working directory, with $HOME abbreviated with a tilde (uses the value of the PROMPT_DIRTRIM variable)
###$              \W     the basename of the current working directory, with $HOME abbreviated with a tilde
###$              \!     the history number of this command
###$              \#     the command number of this command
###$              \$     if the effective UID is 0, a #, otherwise a $
###$              \nnn   the character corresponding to the octal number nnn
###$              \\     a backslash
###$              \[     begin a sequence of non-printing characters, which could be used to embed a terminal control sequence into the prompt
###$              \]     end a sequence of non-printing characters
###$
###$       The  command  number and the history number are usually different: the history number of a command is its position in the history list, which may include commands restored from the history file (see HISTORY below), while the command number is the position in the sequence of  commands  executed  during the current shell session.  After the string is decoded, it is expanded via parameter expansion, command substitution, arithmetic expansion, and quote removal, subject to the value of the promptvars shell option (see the description of  the shopt command under SHELL BUILTIN COMMANDS below).
#
echo "======================================"
echo "Updated path info:"
#echo $path
echo $PATH
