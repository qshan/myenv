#!/bin/csh
#!/bin/tcsh

#####
#if ( -f ~/.cshrc.local ) then
#  source ~/.cshrc.local
#endif

##### check if the dir exist
## Expand parameter to full path
#set dir = `readlink -f "$1"`
## if this dir is not exist, create it
#if ( ! -d "$dir" ) then
#    echo "$dir is not a directory."
##    exit 1
#  mkdir -p $dir
##  exit 1
#else
#  ls $dir
#endif


####if the env variable is #not# set, check the env variable status, and update
#if (! $?VarEnvNameTry) then
#  setenv VarEnvNameTry  "/usr/bin"
#else
#  if ("${VarEnvNameTry}" == "") then
#    echo "[Info] Current VarEnvNameTry is empty, update it"
#    setenv VarEnvNameTry  "/usr/bin"
#  else
#    setenv VarEnvNameTry  "${VarEnvNameTry}:/usr/bin"
#  endif
#endif








#####
if ( -f ~/.cshrc.local ) then
  source ~/.cshrc.local
endif


echo "Calling ###[_mycshrc]### file setting"

#echo "======================================"
#echo "Check path info:"
#echo $path
##echo $PATH

##ToCheck##
## https://web.fe.up.pt/~jmcruz/etc/unix/sh-vs-csh.html
##------------------------------
##login shell startup fils call sequence
# /etc/csh.cshrc
# /etc/csh.login
# ~/.tcshrc
# ~/.cshrc
# ~/.login
##------------------------------
##logout clean fils call sequence
# /etc/csh.logout
# ~/.logout
##------------------------------
##no-login shell startup fils call sequence
# /etc/csh.cshrc
# ~/.tcshrc
# ~/.cshrc
##------------------------------
##tcsh Shell variables
# set VarName=5
# set VarName = 5
##------------------------------
##tcsh Environment variables (children inherit them)
# setenv EnvVarName 5
##------------------------------
##tcsh PATH & path variables
# set path=(PathName01 PathName02)
# set path = ($path /usr/local/bin)
# setenv PATH $PATH\:/usr/local/bin
# setenv PATH "${PATH}:/usr/local/bin"
##------------------------------
##alias setting format
# alias ls  "ls -l"
##------------------------------

#set autolist
#set autoexpand

#set the tcsh history size for personal setting
set history = 10000

setenv timefshan  "`date +%Y-%m-%d-%H%M`"
#alias  gettime    'echo `date +%Y-%m-%d-%H%M`'
alias gettime     'export timefshan="`date +%Y-%m-%d-%H%M`"; echo ${timefshan}'

alias numlockx.status '   numlockx status'
alias numlockx.on '       numlockx on'
alias numlockx.off '      numlockx off'

# replace Caps with CTRL
setxkbmap -option ctrl:nocaps
alias setxkbmap.print '   setxkbmap -print'
#
###set as default setting
##setxkbmap -option
alias setxkbmap.option '   setxkbmap -option'

alias xmodmap.help '      xmodmap --help'

alias xinput.list '       xinput --list '
alias xinput.list.tpad '  xinput --list | grep -i touchpad'
alias xinput.enable '     xinput --enable '
alias xinput.disable '    xinput --disable '

alias 7z.a='              7x a '
alias 7z.x='              7x x '
alias 7z.e='              7x e '
alias 7z.l='              7x l '
alias 7z.t='              7x t '

#
# replace the Caps as press left-Shift and right-Shift both
#setxkbmap -option shift:both_capslock
#
# make short-pressed ctrl behave like Escape
# 单独按下Caps表示Escape，Caps+其它键时表示Ctrl
#xcape -e "Control_L=Escape"

#~/.myalias_common
#
#if ( -f ~/.myalias_common ) then
#  source ~/.myalias_common
#endif

#alias setting here
##------------------------------
#alias ls                    'ls --color=auto '
alias ls                    '\ls --color=auto '
alias la                    'ls -alh '
alias lt                    'ls -ctl '
alias lstr                  'ls -tr '
#
alias du.sh                 'du -sh '
#
alias mvf                   '\mv -f '
##------------------------------
alias grep                  '\grep --color=auto '
alias grep.rni              '\grep --color=auto -rni '
alias grep.rniE             '\grep --color=auto -rniE '
alias grep.rnio             '\grep --color=auto -rnio '
#worked#alias grepspaceonend        '\grep --color=auto -rni "\s\+"\$ '
#alias grepspaceonend        '\grep --color=auto -rni " \+"\$ '
alias grep.spaceonend       '\grep --color=auto -rni " \+"\$ '
#alias grepspaceonend        '\grep --color=auto -rni " "\$ '



##------------------------------
alias findL                 '\find -L '
alias findSwfFile           'find ./ -type f -iname "*.sw*" '
alias findSwfFileRemove     'find ./ -type f -iname "*.sw*" | xargs \rm -rfv '
alias findDotOFile          'find ./ -type f -iname "*.o*" '
alias findDotOFileRemove    'find ./ -type f -iname "*.o*" | xargs \rm -rfv '
alias findremovespaceonend  'find \!* -type f | xargs sed -i "s/\s\+\$//g" '

##------------------------------
alias readlinkf             'readlink -f '




##------------------------------
alias sudodpkgforce-depends     'sudo dpkg -P --force-depends '
alias sudoaptfix-brokeninstall  'sudo apt --fix-broken install'
alias sudoubuntu-driversauto    'sudo ubuntu-drivers autoinstall'
##------------------------------
alias tree.U          '\tree -U '
alias tree.r          '\tree -r '
alias tree.sort.name  '\tree --sort=name '
##------------------------------
alias whicha                'which -a '
##------------------------------
alias lnsTf                 'ln -sTf '
alias lnsnf                 'ln -snf '
##------------------------------
alias chmod+R               'chmod -R a+r '
alias chmod-R               'chmod -R a-r '
alias chmodER               'chmod -R a=r '
##------------------------------
alias tar.czvf               'tar -czvf '
alias tar.cJvf               'tar -cJvf '
alias tar.xzvf               'tar -xzvf '
alias tar.xJvf               'tar -xJvf '
alias tar.tf                 'tar -tf '
##------------------------------
#alias RenameReplaceSpace        "\rename 's/\s+/_/g' "
alias RenameReplaceSpace        "\rename s/\'+/_/g "
alias RenameReplaceSpace1       "\rename 's/[\-|_|\s]*\-+[\-|_|\s]*/-/g' "
#alias RenameReplaceSpace2       "\rename 's/\s*[(|)|\[|\]|{|}|&|,|\!|-]*\s+/_/g' "
#alias RenameReplaceSpace2       "\rename 's/[(|)|\[|\]|{|}|&|,|\!|-|\s]+/_/g' "
#alias RenameReplaceSpace2       "\rename 's/[(|)|\[|\]|{|}|&|,|\!|-|\+|\s]+/_/g' "
#alias RenameReplaceSpace2       "\rename 's/[(|)|\[|\]|{|}|&|,|’|\!|-|_|\s|:]+/_/g' "
alias RenameReplaceSpace2       "\rename 's/[(|)|\[|\]|{|}|&|,|\!|_|\s|:]+/_/g' "
#todo#alias RenameReplaceSpace21      "\rename 's/[(|)|\[|\]|{|}|&|,|\!|\"|;|:]+/./g' "
alias RenameReplaceSpace21      "\rename 's/[(|)|\[|\]|{|}|&|,|\!|;|:]+/./g' "
alias RenameReplaceSpace22      "\rename 's/[_|\s]+/_/g' "
#alias RenameReplaceSpace3       "\rename 's/[《|》|（|）|：|、|(|)|“|”|·|，|、|\[|\]|\s|’]+/_/g' "
#[《|》|（|）|：|、|(|)|“|”|·|，|、|\[|\]|\s|’]
alias RenameReplaceSpace3       "\rename 's/[\-|_]*\.+[\-|_]*/./g' "
#alias RenameReplaceSpaceAll     "RenameReplaceSpace2 *.* ;RenameReplaceSpace1 *.* ;RenameReplaceSpace3 *.* ;"
alias RenameReplaceSpaceAll     "RenameReplaceSpace21 *.* ; RenameReplaceSpace22 *.* ; RenameReplaceSpace1 *.* ; RenameReplaceSpace3 *.* ;"
alias RenameRemoveSChar         "\rename 's/\s*[(|)|\[|\]|{|}|&|,|\!|-]+\s*/-/g' "
alias RenameRemoveSChar2        "\rename 's/[(|)|\[|\]|{|}|&|,|\!]+//g' "
alias RenameCleanDotInFileName  "\rename    's/[-|_]*\.+[-|_]*/./g' "
#alias RenameFiles         "RenameRemoveSChar \!* ; RenameReplaceSpace \!* "
#alias RenameFilesInCurrentFolder   "RenameRemoveSChar *.* ; RenameReplaceSpace *.* "
alias RenameFilesInCurrentFolder    "RenameRemoveSChar *.* ; RenameReplaceSpace *.* ; RenameCleanDotInFileName *.* ;"
alias RenameFilesInFolder "RenameRemoveSChar \!*/*.* ; RenameReplaceSpace \!*/*.* ; RenameCleanDotInFileName \!*/*.* ;"
##------------------------------
#alias GetCurrentFolderName "`pwd | grep 'dev_' | sed -r 's/.*dev_\w+\/\w+\/([0-9a-zA-Z_-]*)\/.*/\1/g'`"
#alias GetCurrentFolderName '`pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\2/g"`'
#alias GetCurrentFolderName 'pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\2/g"'
alias GetNameofCurrentFolder 'echo $PWD | sed -r "s/(.*)\/(.*)/\2/g"'
#alias GetCurrentPathOfFolderName '`pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\1/g"`'
#alias GetCurrentPathOfFolderName 'pwd | grep ".*" | sed -r "s/(.*)\/(.*)/\1/g"'
alias GetFullPathOfCurrentFolder 'echo $PWD | sed -r "s/(.*)\/(.*)/\1/g"'
##------------------------------
alias sed_i_r               'sed -i -r '
alias sedremovespaceonend   'sed -i "s/\s\+\$//g" '
alias sedremovespaceonend1  'sed -i "s/\ \+$//g" '
#example#sed -i -r 's/Word_searched/word_target/g' File_name_replaced
#sed -i -r "s/AC_INIT(.*)/AC_INIT(${FileNameOfTopCode})/g" configure.in
##------------------------------
alias mount.loop            'mount -o loop '
##------------------------------

alias h                     '\history 1000'
alias v                     'vim'
alias vim.d                 'vim -d '
alias vim.dh                'vim -c "set diffopt+=horizontal" -d '
alias vim.do                'vim -d -o '
#alias vimdh                '    vim -c "set-default diffopt+=horizontal" -d '
alias vim.R                 'vim -R '
alias vim.o                 'vim -o '
alias vim.O                 'vim -O '
alias vim.p                 'vim -p '
alias gvim.o                'gvim -o '
alias gvim.O                'gvim -O '
alias gvim.p                'gvim -p '
alias gvim.d                'gvim -d '
alias gvim.do               'gvim -d -o '
alias gvim.R                'gvim -R '
alias nvim.clean            'nvim --clean '
alias nvim.d                'nvim -d '
alias nvim.dh               'nvim -c "set diffopt+=horizontal" -d '
alias nvim.do               'nvim -d -o '
alias nvim.R                'nvim -R '
#alias nvimdh                'nvim -c "set-default diffopt+=horizontal" -d '
alias nvim.o                'nvim -o '
alias nvim.O                'nvim -O '
alias nvim.p                'nvim -p '
#alias nvimqt                'nvim-qt -- '
alias nvim.qt               'nvim-qt --geometry 970x512 -- '

alias cscopebcqRv           'cscope -bcqRv '

##ToCheck# for your env default setting
alias Emacs                 '/usr/bin/emacs26'
#alias EmacsM 'Emacs -mm'
#alias EmacsM 'Emacs -mm \!* &'
alias EmacsM                'Emacs -mm --nodesktop \!* &'
#alias EmacsM 'Emacs --maximized'
################################################################################
# arguments of tcsh:
# \!*       all command-line arguments
# \!^       first command-line arguments
# \!\!:2    second command-line arguments
# \!$       latest command-line arguments
#example:  alias backup  'cp \!^  \!^.back'
################################################################################
#NotSupportInCsh#function of open emace gui with background process in shell
#NotSupportInCshEmacsMm () {
#NotSupportInCsh  Emacs -mm "$@" &
#NotSupportInCsh}
#
#for lubuntu
alias openFileBroswer       'pcmanfm &'
#for ubuntu
#alias openFileBroswer 'nautilus &'

alias openPdf               'evince '
alias md.quarto.convert     'quarto convert'
alias md.quarto.preview     'quarto preview'
alias md.marp.info          'whereis marp'
if ( -d ~/data/tools/marp ) then
#  set    path   = (~/data/tools/marp $path)
  setenv PATH     "${PATH}:~/data/tools/marp"
  alias md.marp.help '        marp --help'
  alias md.marp.pdf '         marp --pdf '
  alias md.marp.pptx '        marp --pptx '
  alias md.marp.p '           marp -p '
endif

# sudo apt install qpdf
alias qpdf.decrypt          'qpdf --decrypt '
# example
# qpdf --decrypt inputfile.pdf outpurfile.pdf

#rust setting
alias cargonew              'cargo new '
alias cargobuild            'cargo build '
alias cargorun              'cargo run '

#go_path alias
alias gotestspace           'cd /data/work/test_space'
alias goriot                'cd /data/work/test_space/RIOT'
alias gortthread            'cd /data/work/test_space/rt-thread'
alias gortqemu              'cd /data/work/test_space/rt-thread/bsp/qemu-vexpress-a9'
#
alias goquarkts             'cd /data/work/test_space/QuarkTS'
alias gonuttx               'cd /data/work/test_space/nuttx'
alias goCTest               'cd /data/work/test_space/ctest_qshan'
alias goCppTest             'cd /data/work/test_space/cpptest_qshan'

#git alias
alias git.help.a                  'git help -a '
alias git.gui                     'git gui '
alias git.add.f                   'git add -f '
alias git.mv.n                    'git mv -n '
#alias gitmvn                      'git mv -dry-run '
alias git.mv                      'git mv '
alias git.mv.v                    'git mv -v '
alias git.mv.f                    'git mv -f '
alias git.rm.n                    'git rm -n '
#alias gitrmn                      'git rm -dry-run '
alias git.rm                      'git rm '
alias git.rm.r                    'git rm -r '
alias git.rm.f                    'git rm -f '
#
alias git.commit.ma               'git commit -a -m '
#example# git commit -ma "coment description"
alias git.commit.m                'git commit -m '
#example# git commit -m "coment description" FileName1 FileName2
alias git.commit.amend            'git commit --amend '
alias git.push                    'git push '
#example# git push TargetName SourceName #push data from SourceName to TargetName
alias git.pull                    'git pull --tags '
alias git.pull.origin.master      'git pull --tags origin master '
#example git checkout TagName FileName
#example git checkout TagName
#example git checkout -b NewBranchName
#example git checkout -b NewBranchName TagName
alias git.fetch                   'git fetch --all '
alias git.remote.add              'git remote add origin '

alias git.remote.v                'git remote -v'
alias git.remote.v.show           'git remote -v show '
#example# gitremoteshow RemoteRepoName
alias git.remote.show.origin      'git remote show origin'
alias git.remote.prune.origin     'git remote prune origin'
alias git.clone                   'git clone '
alias git.clone.b.master          'git clone -b master '
alias git.clone.depth1            'git clone --depth=1 '
alias git.clone.recursive         'git clone --recursive '
alias git.clone.barel             'git clone --bare -l '
#example git clone --bare -l LocalRepoPathWithFullName/.git BackupRepoNameWithFullPath.git
#
alias git.grep                    'git grep '
alias git.grep.r                  'git grep -r '
alias git.grep.i                  'git grep -i '
alias git.grep.I                  'git grep -I '
alias git.grep.help               'git grep --help'
alias git.diff                    'git diff '
alias git.difftool.head           'git difftool --tool=vimdiff HEAD '
alias git.difftool.head1          'git difftool --tool=vimdiff HEAD^ '
alias git.difftool.head2          'git difftool --tool=vimdiff HEAD^^ '
alias git.show                    'git show '
alias git.lsfiles                 'git ls-files '
alias git.lsremote                'git ls-remote '
alias git.lstree                  'git ls-tree '
alias git.log                     'git log '
alias git.log.pretty              'git log --pretty="%h - %s" --no-merges -- t/ '
alias git.log.pretty.short        'git log --pretty=short '
alias git.log.pretty.oneline      'git log --pretty=oneline '
alias git.log.graph               'git log --graph '
alias git.log.stat                'git log --stat '
alias git.tag.l                   'git tag -l '
alias git.tag.a                   'git tag -a '
#alias gitstatus                   'git status '
alias git.status.short            'git status --short '
alias git.branch.all              'git branch --all'
alias git.branch.list             'git branch --list'
alias git.branch.remotes          'git branch --remotes'
alias git.branch.track            'git branch --track'
#example# gitbranchtrack localBranchName remoteHostName/remoteBranchName
alias git.branch.b                'git branch -b'
#example# gitbranchb localBranchName remoteHostName/remoteBranchName
#example# gitbranchb localBranchName
alias git.switch                  'git switch '
alias git.switch.c                'git switch -c'
alias git.switch.f                'git switch -f'
alias git.switch.m                'git switch -m'
#example# gitswitchc localBranchName remoteHostName/remoteBranchName
alias git.restore                 'git restore'
#alias git.config                  'git config'
alias git.config.global           'git config --global'
alias git.config.local            'git config --local'
alias git.config.system           'git config --system'
alias git.config.worktree         'git config --worktree'
alias git.config.file             'git config --file'
alias git.config.list             'git config'
alias git.config.list.global      'git config --list --global'
alias git.config.list.local       'git config --list --local'
alias git.config.list.system      'git config --list --system'
alias git.config.list.worktree    'git config --list --worktree'
alias git.config.list.file        'git config --list --file'
alias git.reset.soft              'git reset --soft  --'
alias git.reset_hard              'git reset --hard  --'
#example# gitreset_hard FileName
#example# gitreset_hard FolderName
alias git.reset.head0               'git reset HEAD '
alias git.reset.head1               'git reset HEAD^ '
alias git.reset.head2               'git reset HEAD~2 '
alias git.reset.head3               'git reset HEAD~3 '
alias git.diff.head                 'git diff HEAD '
alias git.diff.cached               'git diff --cached '
alias git.submodule.update          'git submodule update --init --recursive '
alias git.submodule.update.f        'git submodule update --init --recursive --force '
alias git.submodule.update.remote.f 'git submodule update --init --recursive --remote --force '
alias git.submodule.deinit          'git submodule deinit '
alias git.submodule.add             'git submodule add '
alias git.submodule.sync            'git submodule sync '
alias git.submodule.sync.recursive  'git submodule sync --recursive '
#example# git submodule add <submodule-url> <submodule-path>
#example#reinit submodule
##1#Delete the submodule folder:
#git submodule deinit <submodule_path>
#git rm <submodule_path>
#rm -rf .git/modules/<submodule_path>
##2#Add the submodule again:
#git submodule add <repository_url> <submodule_path>
##3#Update the submodule:
#git submodule update --init --recursive
##4#Update submodule repo source
#git config --file=.gitmodules submodule.Submod.url https://github.com/username/ABC.git
#git config --file=.gitmodules submodule.Submod.branch Development
#git submodule sync
#git submodule update --init --recursive --remote
#
alias git.submodule.status        'git submodule status '
alias git.submodule.set-url       'git submodule set-url -- '
# git submodule set-url -- <path> <url>
alias git.pull.submodules         'git pull --recurse-submodules '
alias git.checkout.b              'git checkout -b '
alias git.checkout.f              'git checkout -f '
#example# git checkout -f <branch> [<start point>]
alias git.checkout.m              'git checkout -m '
alias git.checkout.--             'git checkout -- '
#example# gitcheckout commitNumber fileName
#example# gitcheckout fileName
alias git.clean.fd                'git clean -fd '
alias git.stash                   'git stash '
alias git.stash.list              'git stash list '
alias git.stash.show              'git stash show '
alias git.stash.pop               'git stash pop '
alias git.stash.apply             'git stash apply '
alias git.stash.drop              'git stash drop '
alias git.stash.clear             'git stash clear '
alias git.stash.branch            'git stash branch '
alias git.stash.clear             'git stash clear '
alias git.stash.create            'git stash create '
alias git.stash.store             'git stash store '
##### Interrupted workflow
###  When you are in the middle of something, your boss comes in and demands that you fix something immediately.
###  Traditionally, you would make a commit to a temporary branch to store your changes away, and return to your
###  original branch to make the emergency fix, like this:
###      # ... hack hack hack ...
###TODO# $ git switch -c my_wip
###      $ git commit -a -m "WIP"
###      $ git switch master
###      # edit emergency fix
###      $ git commit -a -m "Fix in a hurry"
###      $ git switch my_wip
###      $ git reset --soft HEAD^
###      # ... continue hacking ...
###  You can use git stash to simplify the above, like this:
###      # ... hack hack hack ...
###info  $ git stash
###      # edit emergency fix
###      $ git commit -a -m "Fix in a hurry"
###info  $ git stash pop
###      # ... continue hacking ...
#
alias git.init                    'git init '
alias git.init.bare               'git init --bare '
#alias git.clone.barel             'git clone --bare -l '
#example git clone --bare -l LocalRepoPathWithFullName/.git BackupRepoNameWithFullPath.git


### docker start ###
#
# docker-compose up
# 启动和运行整个应用。默认情况下，docker-compose up会尝试自动构建任何尚未构建的镜像。如果你想强制它重新构建镜像，可以使用--build选项。
alias docker-compose.up '           docker-compose up '
#
# docker-compose down
# 停止并删除容器、网络、卷和镜像创建的docker-compose up。
alias docker-compose.down '         docker-compose down '
#
### docker end ###

#input methods reset
alias input_methods_reset_fcitx   'fcitx -r'

####set complete with tab in shell command
####get the detail with 'man tcsh'
set autolist = ambiguous
#set complete = igncase
set complete = enhance
#
####set complete = Enhance
set autoexpand
####set correct = cmd
set correct = all
set autocorrect

if ( -f ~/.git-completion.tcsh ) then
  source ~/.git-completion.tcsh
endif

#echo "run here to check"

###############alias for tags generation
## todo Universal-ctags is required
#
#alias ctags 'the_ctags_in_your_env'
alias ctags_list-languages        "ctags --list-languages "
alias ctags_list-maps             "ctags --list-maps "
alias ctags_list-map-exetensions  "ctags --list-map-extensions "
alias ctags_list-fields           "ctags --list-fields "
alias ctags_list-kinds            "ctags --list-kinds "
alias ctags_list-kinds-full       "ctags --list-kinds-full "
alias ctags_list-extras           "ctags --list-extras "
alias ctags_list-excludes         "ctags --list-excludes "
alias ctags_list-features         "ctags --list-features "
alias ctags_list-params           "ctags --list-params "
alias ctags_langmap               'echo "ctags --langmap=c:.c.x,java:+.j"'
alias ctags_langdef               'echo "ctags --langdef=C "'
#
alias ctags_R                     "ctags-universal -R --extras=+qfrs "
#alias ctags_R_C                   "ctags-exuberant -R    --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extra=+qf "
alias ctags_R_C                   "ctags-universal -R    --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extras=+qfrs "
alias ctags_R_Python              "ctags-universal -R    --languages=python --python-kinds=+vi --fields=+iaSKz --extras=+qfrs "
#alias ctags_R_SV                  "ctags-exuberant -R    --languages=systemverilog --systemverilog-kinds=+ctfeilmpdva --fields=+iaSKz --extra=+qf "
alias ctags_R_SV                  "ctags-universal -R    --languages=systemverilog,verilog --systemverilog-kinds=+ctfemp --fields=+aSKz --extras=+qfrs "
alias ctags_R_scala               "ctags-universal -R    --languages=scala --scala-kinds=+p --fields=+iaS --extras=+qfrs "
alias ctags_R_scala-C-Python      "ctags-universal -R    --exclude=@.ctagsignore --links=no --languages=scala,C,C++,python "
alias ctags_Re                    "ctags-universal -R -e --extras=+qfrs "
alias ctags_Re_C                  "ctags-universal -R -e --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extras=+qfrs "
alias ctags_Re_Python             "ctags-universal -R -e --languages=python --python-kinds=+vi --fields=+iaSKz --extras=+qfrs"
alias ctags_Re_SV                 "ctags-universal -R -e --languages=systemverilog,verilog --systemverilog-kinds=+ctfeilmp --fields=+iaSKz --extras=+qfrs"
alias ctags_Re_scala              "ctags-universal -R -e --languages=scala --scala-kinds=+p --fields=+iaS --extras=+qf "
alias ctags_Re_scala-C-Python     "ctags-universal -R -e --exclude=@.ctagsignore --links=no --languages=scala,C,C++,python "
alias ctags_L                     "ctags-universal       --extras=+qfrs -L"
alias ctags_L_C                   "ctags-universal       --languages=C,C++,C#,Asm,make --c++-kinds=+lpx --fields=+iaS --extras=+qfrs -L"
alias ctags_L_Python              "ctags-universal       --languages=python --python-kinds=+vi --fields=+iaSKz --extras=+qfrs -L"
alias ctags_L_SV                  "ctags-universal       --languages=systemverilog,verilog --systemverilog-kinds=+ctfeilmp --fields=+iaSKz --extras=+qfrs -L"
alias ctags_L_scala               "ctags-universal       --languages=scala --scala-kinds=+p --fields=+iaS --extras=+qfrs -L"
#you could try with filelist input style, like
#ctags_R -L filelist_name

setenv  PATH      "${PATH}:/usr/local/lib:/usr/lib"
set     path    = ($path /usr/local/lib /usr/lib)
#
# setenv PATH       '$PATH\:/bin:/home/fshan/.cargo/bin:/home/fshan/bin:/home/fshan/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/lib:/home/fshan/.cargo/bin'
#set     path    = ($path /bin /home/fshan/.cargo/bin /home/fshan/bin /home/fshan/.local/bin /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin /usr/games /usr/local/games /snap/bin /usr/local/lib /home/fshan/.cargo/bin)

#set the the path of graalvm instead of openjdk
# setenv  PATH      "~/data/tools/graalvm/graalvm-ce-java11-22.1.0/bin:${PATH}"
# set     path    = (~/data/tools/graalvm/graalvm-ce-java11-22.1.0/bin $path)

if ( -d ~/data/tools/graalvm/graalvm-jdk-17.0.11+7.1 ) then
setenv graalvmHome "~/data/tools/graalvm/graalvm-jdk-17.0.11+7.1"
endif
if ( -d ~/data/tools/graalvm/graalvm-jdk-22.0.1+8.1 ) then
setenv graalvmHome "~/data/tools/graalvm/graalvm-jdk-22.0.1+8.1"
endif

setenv PATH       "${graalvmHome}/bin:${PATH}"
setenv JAVA_HOME ${graalvmHome}




#set the titile with current path
#tcsh
#echo -n "\033]0;csh $PWD \007"
#TODO#echo -n "\033]0;`basename $PWD` \a"

#alias set_terminal_title          'echo -n "\033]0; $PWD \007"'
alias set_terminal_title          'echo -n "\033]0; `basename $PWD` \007"'
#alias set_terminal_title_min      'echo -n "\033]1; $PWD \007"'
alias set_terminal_title_min      'echo -n "\033]1; `basename $PWD` \007"'

#get the current shell type
# sh -c 'ps -p $$ -o ppid=' | xargs ps -o comm= -p
alias get_current_shell           "sh -c 'ps -p $$ -o ppid=' | xargs ps -o comm= -p"






# https://zipcon.net/~swhite/docs/computers/linux/shell_prompts.html
#
## Text Format          Foreground (text) color   Background color
## 0: normal text       30: Black                 40: Black
## 1: bold              31: Red                   41: Red
## 4: Underlined text   32: Green                 42: Green
##                      33: Yellow                43: Yellow
##                      34: Blue                  44: Blue
##                      35: Purple                45: Purple
##                      36: Cyan                  46: Cyan
##                      37: White                 47: White
##  \e[  – Indicates the beginning of color prompt
##  x;ym – Indicates color code. Use the color code values mentioned below.
##  \e[m – indicates the end of color promptSTARTFGCOLOR='\e[0;47;34m';
##  STARTBGCOLOR="\e[47m"
##  ENDCOLOR="\e[0m"
##  export PS1="$STARTFGCOLOR$STARTBGCOLOR\u@\h \w> $ENDCOLOR"
##  export PS1="${STARTFGCOLOR}${STARTBGCOLOR}\u@\h \w> ${ENDCOLOR}"
#
###set prompt to change the display format of
###head of tcsh shell
#
#TODO#set color of background #export BashBlack="\[\e[0;40;37m\]"
#
setenv TcshBlack          "%{\e[0;30m%}"
setenv TcshDarkGray       "%{\e[1;30m%}"
setenv TcshBlue           "%{\e[0;34m%}"
setenv TcshLightBlue      "%{\e[1;34m%}"
setenv TcshGreen          "%{\e[0;32m%}"
setenv TcshLightGreen     "%{\e[1;32m%}"
setenv TcshCyan           "%{\e[0;36m%}"
setenv TcshLightCyan      "%{\e[1;36m%}"
setenv TcshRed            "%{\e[0;31m%}"
setenv TcshLightRed       "%{\e[1;31m%}"
setenv TcshPurple         "%{\e[0;35m%}"
setenv TcshLightPurple    "%{\e[1;35m%}"
setenv TcshBrown          "%{\e[0;33m%}"
setenv TcshYellow         "%{\e[1;33m%}"
setenv TcshLightGray      "%{\e[0;37m%}"
setenv TcshWhite          "%{\e[1;37m%}"
setenv TcshColorEnd       "%{\e[0m%}"
#worked#setenv TcshColorEnd        "%{\033[0m%}"


#set format of shell header string for tcsh
#alias set_full_path "%U%m%u:%B%~%b%#"
#alias set_full_path "set prompt='%U%m%u:%B%C%b%#'"
#alias set_full_path "set prompt='%U%M%u:%B%/%b%#'"
#alias set_full_path "set prompt='%U%m%u:%B%/%b[%h]%#'"
#alias set_full_path1 "set prompt='${TcshYellow}%U%m%u:%B%/%b[%h]%#${TcshColorEnd}'"
#alias set_full_path "set prompt='${TcshGreen}%B%n%b${TcshColorEnd}@${TcshYellow}%U%m%u${TcshColorEnd}${TcshLightGray}:%B%/%b${TcshColorEnd}${TcshLightGreen}%S[%h]%#%s${TcshColorEnd}${TcshLightGray}%S'"
alias set_full_path   "set prompt='${TcshGreen}%B%n%b${TcshColorEnd}@${TcshYellow}%U%m%u${TcshColorEnd}${TcshLightGray}:%B%/%b${TcshColorEnd}${TcshLightGreen}%S[%h]%#%s${TcshColorEnd}'"
#alias set_full_path1 "set prompt='${TcshYellow}%U%m%u:%B%/%b${TcshColorEnd}${TcshGreen}[%h]%#${TcshColorEnd}'"
#alias set_full_path1  "set prompt='${TcshYellow}%U%n%u${TcshColorEnd}${TcshLightGray}:%B%~%b${TcshColorEnd}${TcshLightGreen}%B[%h]%#%b${TcshColorEnd}'"
#alias set_full_path1  "set prompt='${TcshYellow}%U%n%u${TcshColorEnd}${TcshLightGray}:%B%~%b${TcshColorEnd}${TcshLightGreen}%B\n[%h]%#%b${TcshColorEnd}'"
alias set_full_path1  "set prompt='${TcshYellow}%U%n%u${TcshColorEnd}${TcshLightGray}:%B%~%b${TcshColorEnd}${TcshLightGreen}%B[%h]%#%b${TcshColorEnd}'"
alias set_full_path2  "set prompt='${TcshYellow}%U%m%u${TcshColorEnd}${TcshLightGray}:%B%c3%b${TcshColorEnd}${TcshLightGreen}%B[%h]%#%b${TcshColorEnd}'"

alias set_short_path  "set prompt='${TcshYellow}%B%n%b${TcshColorEnd}:${TcshLightGreen}%B[%h]%#%b${TcshColorEnd}'"
#alias set_short_path "set prompt='${TcshYellow}%B%n%b${TcshColorEnd}:${TcshLightGreen}%S[%h]%#%s${TcshColorEnd}'"
#alias set_short_path "set prompt='${TcshYellow}%B%m%b${TcshColorEnd}:${TcshGreen}[%h]%#${TcshColorEnd}'"
#alias set_short_path "set prompt='${TcshYellow}%B%m%b${TcshColorEnd}:${TcshGreen}%h%#${TcshColorEnd}'"
#alias set_short_path "set prompt='${TcshYellow}%B%m%b${TcshColorEnd}:%h%#'"
#alias set_short_path "set prompt='%B%m%b:%h%#'"
#alias set_short_path "set prompt='%U%m%u:%B%c%b%#'"
#alias set_short_path "set prompt='%U%m%u:%B%c2%b%#'"
#alias set_short_path "set prompt='%U%m%u:%B%c%b:%h%#'"
#alias set_short_path1 "set prompt='%B%m%b:%h%#'"
#alias set_short_path1 "set prompt='${TcshYellow}%B%n%b${TcshColorEnd}:${TcshGreen}[%h]%#${TcshColorEnd}'"
#alias set_short_path1 "set prompt='${TcshYellow}%B%m%b${TcshColorEnd}:${TcshGreen}%B[%h]%#%b${TcshColorEnd}'"
alias set_short_path1   "set prompt='${TcshYellow}%B%m%b${TcshColorEnd}:${TcshGreen}%B[%h]%#%b${TcshColorEnd}'"

#alias set_default_path "set prompt='%{\033[0;32m%}%U%m%u:%B%~%b%#'"
alias set_default_path  "set prompt='%U%m%u:%B%~%b[%h]%#'"
#alias set_default_path  "set prompt='%U%m%u:%B%~%b%#'"
#worked#alias set_default_path1 "set prompt='%{\e[1;33m%}%U%m%u:%B%~%b%#'"
#alias set_default_path_with_yellow "set prompt='${TcshYellow}%U%m%u:%B%~%b[%h]%#${TcshColorEnd}'"
#alias set_default_path_with_yellow "set prompt='${TcshYellow}%U%m%u:%B%~%b${TcshColorEnd}${TcshGreen}[%h]%#${TcshColorEnd}'"
#alias set_default_path_with_yellow "set prompt='${TcshYellow}%N@%U%m%u:%B%~%b${TcshColorEnd}${TcshGreen}[%h]%#${TcshColorEnd}'"
#alias set_default_path_with_yellow "set prompt='${TcshYellow}%N@%U%m%u:%B%~%b${TcshColorEnd}${TcshGreen}[%h]%#${TcshColorEnd}'"
alias set_default_path_with_yellow  "set prompt='${TcshYellow}%N@%U%m%u:%B%~%b${TcshColorEnd}${TcshGreen}%S[%h]%#%s${TcshColorEnd}'"
alias set_default_path_with_yellow1 "set prompt='${TcshYellow}%N@%U%m%u:%B%c3%b${TcshColorEnd}${TcshGreen}%S[%h]%#%s${TcshColorEnd}'"
#####set default with color by default
#set_default_path_with_yellow
#set_full_path
#echo "prompt is $prompt"
#set_short_path
set_full_path1

alias wget.c   'wget -c '
alias wget.L   'wget -L '
alias curl.CL  'curl -CL '
alias curl.L   'curl -L '
#alias curlCLO 'curl -CL -O '
alias curl.L.O 'curl -L -O '

#scala env setting
if ( -d /home/fshan/.local/share/coursier/bin ) then
  set    path   = (/home/fshan/.local/share/coursier/bin $path)
  setenv PATH     "${PATH}:/home/fshan/.local/share/coursier/bin"
#setenv PATH '/home/fshan/.local/share/coursier/bin:$PATH'
#set path = ($path /home/fshan/.local/share/coursier/bin)
endif
# https://www.scala-sbt.org/1.x/docs/Running.html
# https://www.scala-sbt.org/1.x/docs/Command-Line-Reference.html
# https://www.scalawilliam.com/essential-sbt/
alias sbt.new                  'sbt new'
alias sbt.task                 'sbt task'
alias sbt.about                'sbt about'
alias sbt.clean                'sbt clean'
alias sbt.clearCaches          'sbt clearCaches '
alias sbt.compile              'sbt compile'
alias sbt.recompile            'sbt ~compile'
alias sbt.test                 'sbt test'
alias sbt.testcompile          'sbt test:compile '
alias sbt.testonly             'sbt test:testOnly '
alias sbt.testQuick            'sbt ~testQuick'
alias sbt.console              'sbt console'
alias sbt.run                  'sbt run'
alias sbt.package              'sbt package'
alias sbt.reload               'sbt reload'
alias sbt.project              'sbt project'
alias sbt.projects             'sbt projects'
alias sbt.publishLocal         'sbt publishLocal'
alias sbt.inspect              'sbt inspect '
alias sbt.inspectactual        'sbt "inspect actual console"'
alias sbt.settings             'sbt settings '
alias sbt.settings.v           'sbt "settings -v"'
alias sbt.tasks                'sbt tasks '
alias sbt.tasks.v              'sbt "tasks -v"'
alias sbt.projects             'sbt projects '
alias sbt.showversion          'sbt "show version"'
alias sbt.scalaVersion         'sbt scalaVersion'
alias sbt.crossScalaVersions   'sbt crossScalaVersions'
alias sbt.classDirectory       'sbt classDirectory'
alias sbt.baseDirectory        'sbt baseDirectory'
alias sbt.libraryDepend        'sbt libraryDependencies'
alias sbt.managedResourceDir   'sbt managedResourceDirectories'
alias sbt.assembly             'sbt assembly'
alias sbt.publishLocal         'sbt publishLocal'
alias sbt.evicted              'sbt evicted'

alias idea.community "intellij-idea-community "

#------------------------------
#mill Built-in commands
alias mill.watch                      'mill --watch '
alias mill.__.compile                 'mill __.compile '
alias mill.__.run                     'mill __.run '
alias mill.init                       'mill init '
alias mill.resolve                    'mill resolve '
#info# mill resolve foo._
alias mill.resolve.compile            'mill resolve _.compile'
alias mill.resolve.compileall         'mill resolve __.compile'
alias mill.resolve.run                'mill resolve _.run'
alias mill.resolve.runall             'mill resolve __.run'
alias mill.resolve.test               'mill resolve _.test'
alias mill.resolve.testall            'mill resolve __.test'
#info#List what tasks are available to run:
alias mill.resolve._                  'mill resolve _'
#info#see a full list of the different tasks that are available
alias mill.resolve.__                 'mill resolve __'
alias mill.inspect                    'mill inspect '
#info# mill inspect foo.run
#info# mill inspect foo._
alias mill.inspect.compile            'mill inspect _.compile'
alias mill.inspect.compile.all        'mill inspect __.compile'
alias mill.inspect_                   'mill inspect _'
alias mill.inspect__                  'mill inspect __'
alias mill.describe                   'mill describe '
#info# mill describe ops[2.12.4].compile
alias mill.show                       'mill show '
#info# mill show foo.scalaVersion
alias mill.showNamed                  'mill showNamed '
alias mill.show_                      'mill show _'
alias mill.show__                     'mill show __'
alias mill.path                       'mill path '
#info# mill path foo.assembly foo.sources
alias mill.path._                     'mill path _'
alias mill.plan                       'mill plan '
#info# mill plan foo.compileClasspath
alias mill.show.visualize             'mill show visualize '
alias mill.show.visualizePlan         'mill show visualizePlan '
alias mill.clean                      'mill clean '
# mill clean <task>  # delete the cached output of a task, terminate any runBackground
alias mill.clean.compile              'mill clean _compile'
alias mill.clean.compile.all          'mill clean __compile'
#Search for dependency updates
alias mill.searchdepend               'mill mill.scalalib.Dependency/showUpdates'
#Detecting transitive dependencies
alias mill._.ivyDepsTree              'mill _.ivyDepsTree '
alias mill.__.ivyDepsTree             'mill __.ivyDepsTree '
#The Build REPL
alias mill.buildrepl                  'mill --repl '
#Deploying your code
#
#Integrating IntelliJ with Mill
alias mill.scalalib.GenIdea         'mill -j 2  mill.scalalib.GenIdea/idea'
alias mill.idea.GenIdea             'mill -j 2  mill.idea.GenIdea/idea'
alias mill.idea.GenIdea.debug       'mill -j 2  mill.idea.GenIdea/idea --debug'
alias mill.bsp.Install              'mill -j 2 -i mill.bsp.BSP/install'
alias mill.bsp.Install.debug        'mill -j 2 -i mill.bsp.BSP/install --debug'

#-----bazel start-------------------------
alias bazel.help "      bazel help "
alias bazel.build "     bazel build "
alias bazel.run "       bazel run "
alias bazel.test "      bazel test "
alias bazel.query "     bazel query "
alias bazel.clean "     bazel clean "
alias bazel.version "   bazel version "
#-----bazel end-------------------------

#------------------------------
#chinese display support
#add following part into /etc/profile
setenv LC_ALL   C.UTF-8
setenv LANG     C.UTF-8
#------------------------------

#python alias
alias python3.m.venv '                    python3 -m venv '
#Example#python3 -m venv VirtualEnvName ; cd VirtualEnvName; source bin/activate; pip3 list
#deactivate
alias python3.m.pip.install '             python3 -m pip install'
alias python3.m.pip.install.upgrade.pip ' python3 -m pip install --upgrade pip'
alias python3.m.piplist '                 python3 -m pip list'

if ( -d /opt/riscv/bin ) then
setenv PATH "${PATH}:/opt/riscv/bin"
endif
if ( -d ~/miniconda/bin ) then
setenv PATH "${PATH}:~/miniconda/bin"
endif
#------------------------------
# conda alias
alias conda.activate '   conda activate '
alias conda.deactivate ' conda deactivate '
alias conda.create '     conda create '
alias conda.create.name ' conda create -n '
#info#alias condacreaten 'conda create -name '
#
alias conda.rename '     conda rename '
# conda rename -n test123 test321
# conda rename --name test123 test321
# conda rename -p path/to/test123 test321
# conda rename --prefix path/to/test123 test321
#
alias conda.remove ' conda remove '
alias conda.remove.name ' conda remove -n '
#example#conda remove -n EnvName RemovingModuleName
alias conda.install '    conda install '
alias conda.install.name 'conda install --name '
#info#alias condaconfigadd "conda config --add channels conda-forge"
#info#alias condaconfigconfig "conda config --set channel_priority strict"
#info#alias condaconfiginstall "conda install <package-name>"
alias conda.version '    conda --version '
alias conda.update.conda 'conda update conda '
alias conda.update.all '  conda update --all '
alias conda.info.e '      conda info -e '
alias conda.list '       conda list '
alias conda.list.name '   conda list --name '
alias conda.search '     conda search '
alias conda.update '     conda update '
alias conda.config.add.channels '  conda config --add channels '

#------------------------------


##%U%m%u:%B%~%b%#
#set prompt='%B%m%b%h%#' #display hostname + linenumber of histoty commands
#set prompt='%B%c%b%h%#' #display last part of current folder + linenumber of history commands

#following info got from man tcsh
##$##       prompt  The string which is printed before reading each command from the terminal.  prompt may include any of the following  formattingsequences (+), which are replaced by the given information:
##$##               %/  The current working directory.
##$##               %~  The  current  working  directory, but with one's home directory represented by `~' and other users' home directories repre‐sented by `~user' as per Filename substitution.  `~user' substitution happens only if the shell has already used `~user' ina pathname in the current session.
##$##               %c[[0]n], %.[[0]n]
##$##                   The  trailing component of the current working directory, or n trailing components if a digit n is given.  If n begins with`0', the number of skipped components precede the trailing component(s) in the format `/<skipped>trailing'.  If the  ellip‐sis  shell variable is set, skipped components are represented by an ellipsis so the whole becomes `...trailing'.  `~' sub‐
##$##                   stitution is done as in `%~' above, but the `~' component is ignored when counting trailing components.
##$##               %C  Like %c, but without `~' substitution.
##$##               %h, %!, !
##$##                   The current history event number.
##$##               %M  The full hostname.
##$##               %m  The hostname up to the first `.'.
##$##               %S (%s)
##$##                   Start (stop) standout mode.
##$##               %B (%b)
##$##                   Start (stop) boldfacing mode.
##$##               %U (%u)
##$##                   Start (stop) underline mode.
##$##               %t, %@
##$##                   The time of day in 12-hour AM/PM format.
##$##               %T  Like `%t', but in 24-hour format (but see the ampm shell variable).
##$##               %p  The `precise' time of day in 12-hour AM/PM format, with seconds.
##$##               %P  Like `%p', but in 24-hour format (but see the ampm shell variable).
##$##               \c  c is parsed as in bindkey.
##$##               ^c  c is parsed as in bindkey.
##$##               %%  A single `%'.
##$##               %n  The user name.
##$##               %N  The effective user name.
##$##               %j  The number of jobs.
##$##               %d  The weekday in `Day' format.
##$##               %D  The day in `dd' format.
##$##               %w  The month in `Mon' format.
##$##               %W  The month in `mm' format.
##$##               %y  The year in `yy' format.
##$##               %Y  The year in `yyyy' format.
##$##               %l  The shell's tty.
##$##               %L  Clears from the end of the prompt to end of the display or the end of the line.
##$##               %$  Expands the shell or environment variable name immediately after the `$'.
##$##               %#  `>' (or the first character of the promptchars  shell  variable)  for  normal  users,  `#'  (or  the  second  character  of promptchars) for the superuser.
##$##               %{string%}
##$##                   Includes string as a literal escape sequence.  It should be used only to change terminal attributes and should not move the cursor location.  This cannot be the last sequence in prompt.
##$##               %?  The return code of the command executed just before the prompt.
##$##               %R  In prompt2, the status of the parser.  In prompt3, the corrected string.  In history, the history string.
##$##               `%B', `%S', `%U' and `%{string%}' are available in only eight-bit-clean shells; see the version shell variable.
##$##               The bold, standout and underline sequences are often used to distinguish a superuser shell.  For example,
##$##                   > set prompt = "%m [%h] %B[%@]%b [%/] you rang? "
##$##                   tut [37] [2:54pm] [/usr/accts/sys] you rang? _
##$##               If `%t', `%@', `%T', `%p', or `%P' is used, and noding is not set, then print `DING!' on the change of hour  (i.e,  `:00'  min‐utes) instead of the actual time.
##$##               Set by default to `%# ' in interactive shells.

echo "======================================"
echo "Updated path info:"
echo $path
#echo $PATH
