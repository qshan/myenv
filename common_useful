#!/bin/bash

#replace contents the c file in the TargetPathName, the contents changing is like this:
#HWIO_OUTXF ( basename, xxxxx) -> HWIO_OUTF (xxxxx)
find TargetPathName -type f -iname "*.c" |xargs sed -i 's/HWIO_OUTXF\s*(\s*[a-zA-Z0-9_\-]*\s*,\s*/HWIO_OUTF (/g'

#replace the keywords and generate a new file
sed 's/Word_searched/word_target/g' input_file > outputfile

#replace the keywords in targetfile
sed -i 's/Word_searched/word_target/g' File_name_replaced


sed -i -r 's/Word_searched/word_target/g' File_name_replaced

sed -i -E "s/\s*Addr:(0[xX][0-9a-fA-F]*).*:Data:#(0[xX][0-9a-fA-F]*).*/      <register address='\1' value='\2' \/>/g" Cypress_FF_reg_dump_after_wla_pass_BBB_20190822.xml

#replase the space on the end of line in that files
sed -i 's/\s\+\$/\$/g' File_name_replaced

#find the specific named file and replase the space on the end of line in that files
find TargetPathName -type f -iname "*.[c|h]" | xargs sed -i 's/\s\+\$/\$/g'

#delete the empty line (cover write space) in targetfile
sed  -i '/^\s*$/d' data.txt

#delete the empty line (cover write space) and generate a new file
sed '/^\s*$/d' data.txt  > data.update.txt

# Example: delete the 4th line in a file
$ sed '4d' input.txt > output.txt

# Example: replace every occurrence of 'hello' with 'world' on lines 10-20
$ sed '10,20s/hello/world/' input.txt > output.txt

#replace(,0x0001) to (,0x1), replace (,0x0000) to (,0x0)
sed  -i -r 's/,0x0+/,0x/g' data.txt
sed  -i 's/,0x)/,0x0)/g' data.txt

find ./CONFIG -type f -exec sed -i "s/_HOME_DIR_/$_HOME_DIR/g" {} \;
find . -type f -exec sed -i 's/foo/bar/g' {} +

#copy when source file is newer than destination file
find SearchPath -type f -iname SearchPattern | xargs -I{} cp -u {} TargetCopyPath
#forcely copy the source file to destination
find SearchPath -type f -iname SearchPattern | xargs -I{} \cp -f {} TargetCopyPath

find SearchPath -type f -iname SearchNamePattern | xargs -I{} cp  {} TargetCopyPath
find SearchPath -type f -iname SearchNamePattern | xargs -I{} mv {} TargetCopyPath
find SearchPath -type f -iname SearchNamePattern | xargs -I{} \mv -f {} TargetCopyPath
find SearchPath -type f -iname SearchNamePattern | xargs \grep --color -oi grepPattern

#forcely remove the folder in the SearchPath
find SearchPath -type d -iname "*" | xargs \rm -rf
find ./* -type d -iname "*" | xargs \rm -rf

grep -RiIl 'SearchPattern' SearchPath | xargs sed -i 's/search/replace/g'

#search the space on end of line
#one space char
grep -rni '\s\$'  SearchPath
#multi space chars
grep -rni '\s\+\$'  SearchPath
#one space char from line start
grep -rni '^.*\s\$'  SearchPath
#multi space chars from line start
grep -rni '^.*\s\+\$'  SearchPath

#rename the file name with replace the space with underline
rename  's/\s+/_/g' FileName
rename -v 's/\s+/_/g' FileName
#To translate uppercase names to lower, you'd use
rename 'y/A-Z/a-z/' *

env | sort
ln -sTf SourceFolderName TargetLinkerName
ln -snf SourceFolderName TargetLinkerName

#check the key details in the SHELL you used
#list binding key details info in tcsh
bindkey -b
#list binding key details info in bash
man bash
#search Commands for Moving

#checkout myenv with git
# $git clone --recursive git@github.com:qshan/myenv.git

#sudo \rm -f  /var/lib/dpkg/info/git-el.postinst

#sudo apt-get install -y NameOfSoftware
#sudo apt-get -f install
#sudo apt-get install --reinstall NameOfSoftware
#sudo apt-get autoremove NameOfSoftware

#sudo apt-get install autotools-dev automake gettext gettext-el
#http://ftp.gnu.org/gnu/automake/
#http://ftp.gnu.org/gnu/automake/automake-1.16.tar.xz
#http://ftp.gnu.org/gnu/automake/automake-1.16.3.tar.xz

#sudo apt-cache search KeyWordsSearched

#--------------------------------------------------
#$sudo apt-get install -y gettext gettext-base gettext-doc gettext-el gettext-lint libgettextpo0 libgettextpo-dev
#$sudo apt-get install -y libsysfs-dev
#$sudo apt-get install pkg-config pkg-config-aarch64-linux-gnu pkgconf
#$sudo apt-get install libncurses5 libncurses5-dbg libncurses5-dev lib64ncurses5 lib64ncurses5-dev
#$sudo apt-get install gdb gdb64 gdb-source gdb-doc gdb-dbg gdb-multiarch xxgdb

#$sudo apt-get install libiconv-hook-dev
#$sudo apt-get install libtool
#$sudo apt-get install linkchecker linkchecker-gui linklint link-grammar
#$sudo apt-get install intltool intltool-debian autopoint libint-dev
#$sudo apt-get install libgtk2.0-dev libgtk2.0-common libgtk-3-dev libgtk-3-common libgtk2.0-bin libgtk-3-bin
#$sudo apt-get install autoconf autoconf-archive automake libtool libtool-bin
#$sudo apt-get install libglib2.0-dev libglib3.0-cil-dev

#issue 'AM_ICONV_LINK' not found in library
#To check where aclocal is looking for m4 files
#$(aclocal --print)
#if you get this path, /usr/local/share/aclocal, then check if the *.m4 file is in this path
#if *.m4 files is in this path, /usr/share/aclocal/*.m4, then create the linker on the path aclocal needed
#$cd /usr/local/share/aclocal; ln -s /usr/share/aclocal/*.m .
#or add prefix to figure out the path of *.m4 file for aclocal, like,
#$aclocal -I /usr/share/aclocal
#or add alias for aclocal with this prefix, like
#bash#$ alias aclocal='\aclocal -I /usr/share/aclocal'
#tcsh#$ alias aclocal '\aclocal -I /usr/share/aclocal'
#--------------------------------------------------

#add wirte access of FileName for all of users (user/groups/others)
chmod a+w FileName
#add read access of FileName for user/OwnerOfFile
chmod u+r FileName
#remove the write access of FileName for group
chmod g-w FileName
#set the access of FileName as x for others
chmod o=x FileName

#add
chmod +t FileName

# change the owner of FileName as UserName
chown UserName FileName

# change the owner of FolderName and subfolder as UserName
chown R UserName FolderName

# change the group of FileName as UserName
chgrp UserName FileName

# change the group of FolderName and subfolder as UserName
chgrp R UserName FolderName


#sudo apt-get install kdbg

##mount the disk operation
# #check the info about the disk and partition
# sudo fdisk -alh
# sudo blkid
# ls /dev/disk/by-XXX -alh
#
# #mount the sdb1 on the specific path
# sudo mount -rw -t ext4 /dev/sdb1 /home/fshan/data
#
#####fstab contents example start#####
#     # <fs>            <mountpoint>    <type>        <opts>        <dump/pass>
#     # NOTE: If your BOOT partition is ReiserFS, add the notail option to opts.
#     /dev/sda10        /boot            ext4        noauto,noatime    1 2
#     /dev/sda6         /                ext4        noatime           0 1
#     /dev/sda9         none             swap        sw                0 0
#     /dev/cdrom        /mnt/cdrom       auto        noauto,ro         0 0
#     /dev/sdb1    /home/fshan/data/sdb1 ext4        defaults,rw       0 0
#
##explaination of opts
## defaults: rw,suid,dev,exec,auto,nouser,async
## auto : noauto
## rw   : ro
## exec : noexec
## sync : async
## user : nouser
#####fstab contents example end#####
